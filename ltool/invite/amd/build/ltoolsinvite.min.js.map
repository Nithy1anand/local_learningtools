{"version":3,"sources":["../src/ltoolsinvite.js"],"names":["define","$","ModalFactory","Str","Fragment","ModalEvents","Ajax","notification","learningToolInviteAction","params","showModalInvitetool","inviteinfo","document","querySelector","addEventListener","create","title","strinviteusers","getListInviteUsers","type","types","SAVE_CANCEL","body","getInviteAction","large","then","modal","setSaveButtonText","get_string","show","getRoot","on","hidden","destroy","save","e","preventDefault","submitFormData","submit","modalform","querySelectorAll","formData","URLSearchParams","FormData","toString","console","log","JSON","stringify","M","cfg","wwwroot","userid","call","methodname","args","formdata","done","hide","successinfo","when","localizedEditString","addNotification","message","loadFragment","contextid","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Notes ltool define js.\r\n * @package   ltool_note\r\n * @category  Classes - autoloading\r\n * @copyright 2021, bdecent gmbh bdecent.de\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n define(['jquery', 'core/modal_factory', 'core/str', 'core/fragment', 'core/modal_events', 'core/ajax', 'core/notification'],\r\n function($, ModalFactory, Str, Fragment, ModalEvents, Ajax, notification) {\r\n\r\n    function learningToolInviteAction(params) {\r\n        showModalInvitetool(params);\r\n    }\r\n\r\n    function showModalInvitetool(params) {\r\n        var inviteinfo = document.querySelector(\".ltoolinvite-info #ltoolinvite-action\");\r\n        if (inviteinfo) {\r\n            inviteinfo.addEventListener(\"click\", function() {\r\n                ModalFactory.create({\r\n                    title:  params.strinviteusers + getListInviteUsers(params),\r\n                    type: ModalFactory.types.SAVE_CANCEL,\r\n                    body: getInviteAction(params),\r\n                    large: true\r\n                }).then(function(modal) {\r\n                    modal.setSaveButtonText(Str.get_string('invitenow', 'local_learningtools'));\r\n                    modal.show();\r\n                    modal.getRoot().on(ModalEvents.hidden, function() {\r\n                        modal.destroy();\r\n                    });\r\n                    modal.getRoot().on(ModalEvents.save, function(e) {\r\n                        e.preventDefault();\r\n                        submitFormData(modal, params);\r\n                        modal.getRoot().submit();\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Submit the modal data form.\r\n     * @param {object} modal object\r\n     * @param {array} params  list of parameters\r\n     * @return {void} ajax respoltoolsnse.\r\n     */\r\n    function submitFormData(modal, params) {\r\n        var modalform = document.querySelectorAll('#invite-users-area form')[0];\r\n        var formData = new URLSearchParams(new FormData(modalform)).toString();\r\n        console.log(formData);\r\n        params = JSON.stringify(params);\r\n        var listurl = M.cfg.wwwroot + \"/local/learningtools/ltool/invite/list.php?id=\"+params.userid\r\n        Ajax.call([{\r\n            methodname: 'ltool_invite_inviteusers',\r\n            args: {params: params, formdata: formData},\r\n            done: function(response) {\r\n                modal.hide();\r\n                var successinfo = Str.get_string('successinviteusers', 'local_learningtools', 'test');\r\n                $.when(successinfo).done(function(localizedEditString) {\r\n                    notification.addNotification({\r\n                        message: localizedEditString,\r\n                        type: \"success\"\r\n                    });\r\n                });\r\n            }\r\n        }]);\r\n    }\r\n\r\n    function getInviteAction(params) {\r\n        return Fragment.loadFragment('ltool_invite', 'get_inviteusers_form', params.contextid, params);\r\n    }\r\n\r\n    function getListInviteUsers(params) {\r\n        return '';\r\n    }\r\n\r\n\r\n    return {\r\n        init: function(params) {\r\n            learningToolInviteAction(params);\r\n        }\r\n    };\r\n });"],"file":"ltoolsinvite.min.js"}